@using System.ServiceModel.Dispatcher
@using MVCRiceStore.Models;
@model MVCRiceStore.Models.StoreViewModel

@{
    ViewBag.Title = "Edit Store";
}

<h2>@ViewBag.Title</h2>

<h2>@Html.DisplayFor(model => model.Name)</h2>

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-3">@Html.Label("Name")</div>
            <div class="col-md-9">@Html.EditorFor(mode=>Model.Name)</div>
        </div>

        <div class="form-group">
            <div class="col-md-3">@Html.Label("Address")</div>
            <div class="col-md-9">@Html.EditorFor(model=>model.Address)</div>
        </div>

        <div class="form-group">
            <div class="col-md-3">@Html.Label("Suburb")</div>
            <div class="col-md-9">@Html.EditorFor(model => model.Suburb)</div>
        </div>

        <div class="form-group">
            <div class="col-md-3">@Html.Label("State")</div>
            <div class="col-md-9">@Html.EditorFor(model => model.State)</div>
        </div>

        <div class="form-group">
            <div class="col-md-3">@Html.Label("Postcode")</div>
            <div class="col-md-9">@Html.EditorFor(model=>model.Postcode)</div>
        </div>

        <div class="form-group">
            <div class="col-md-3">@Html.Label("Available Rice")</div>
            @{
                var listItems = new List<SelectListItem>();
                var listItems2 = new List<Object>();
                var riceList = ViewBag.RiceList;

                string[] selectedRices;

                var riceItems = new List<Object>();
                string[] selectedValues;

                if (Model.rices != null) {
                    selectedRices = Model.rices;
                }

                if (riceList != null) {
                    foreach (Rice r in riceList) {
                        
                        listItems.Add(new SelectListItem(){ Text = r.Type, Value = r.Id.ToString()});
                        listItems2.Add(new { Text = r.Type, Value = r.Id.ToString() });
                        
                    }
                }
            }
                        
            @{
                var myListItems = new List<SelectListItem>();
                myListItems = ViewBag.MyList;
                
                SelectList sl = new SelectList(myListItems,"Value","Text");
            }

            @*Test Strong Type List Box with 3 different List<SelectListItem>, new SelectList(List<SelectListItem>) and new SelectList(List<Object>) *@
            <div class="col-md-9">@Html.ListBoxFor(model => model.rices, ViewBag.MyList as List<SelectListItem>)</div>
            @*<div class="col-md-9">@Html.ListBoxFor(model => model.rices, listItems)</div>*@
            @*<div class="col-md-9">@Html.ListBoxFor(model => model.rices, new SelectList(listItems2,"Value","Text"))</div>*@
                   
        </div>
        

        <div class="form-group">
            <input type="submit" value="Save"/>
        </div>

    </div>
    
}


@Html.ActionLink("Back to list", "Index")
